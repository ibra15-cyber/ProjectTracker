spring.application.name=ProjectTracker

server.port=3232

# Default profile (development)
spring.profiles.active=dev

# Enable response compression
server.compression.enabled=true
server.compression.mime-types=text/html,text/xml,text/plain,text/css,application/javascript,application/json
server.compression.min-response-size=1024

secretJwtString=${secretJwtString}

spring.datasource.url=jdbc:postgresql://localhost:5432/project_tracker
spring.datasource.username=${postgres_user}
spring.datasource.password=${postgres_password}
spring.datasource.driver-class-name=org.postgresql.Driver
#spring.data.jdbc.dialect=postgresql

#hiberante
spring.jpa.hibernate.ddl-auto=update
#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect


# MongoDB connection
spring.data.mongodb.uri=mongodb://localhost:27017/project_tracker_log

# Redis configuration
spring.cache.type=redis
spring.data.redis.host=localhost
spring.data.redis.port=6379

spring.jpa.properties.hibernate.enable_lazy_load_no_trans=true
spring.jackson.serialization.fail-on-empty-beans=false

# Email
# SMTP Connection (Existing)
spring.mail.host=smtp.gmail.com
spring.mail.port=465
spring.mail.username=${gmail_account}
spring.mail.password=${gmail_password}
# Timeout Settings (New)
spring.mail.properties.mail.smtp.timeout=5000         # Socket I/O timeout (ms)
spring.mail.properties.mail.smtp.writetimeout=5000    # Write timeout (ms)
spring.mail.properties.mail.smtp.connectiontimeout=5000 # Connection timeout (ms)
# Retry Settings (New)
spring.mail.properties.mail.smtp.retry.enable=true     # Enable retry
spring.mail.properties.mail.smtp.maxretries=3         # Max retry attempts
spring.mail.properties.mail.smtp.initialretrydelay=1000 # Initial delay (ms)
spring.mail.properties.mail.smtp.retryinterval=2000    # Delay between retries (ms)
# Existing SSL/Auth Config
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.socketFactory.port=465
spring.mail.properties.mail.smtp.socketFactory.class=javax.net.ssl.SSLSocketFactory
spring.mail.properties.mail.smtp.socketFactory.fallback=false
spring.mail.properties.mail.smtp.ssl.enable=true

#GITHUB
spring.security.oauth2.client.registration.github.client-id=${GITHUB_CLIENT_ID}
spring.security.oauth2.client.registration.github.client-secret=${GITHUB_CLIENT_SECRET}
spring.security.oauth2.client.registration.github.scope=user:email,read:user
spring.security.oauth2.client.registration.github.redirect-uri={baseUrl}/login/oauth2/code/github


#GOOGLE
spring.security.oauth2.client.registration.google.client-id=${GOOGLE_CLIENT_ID}
spring.security.oauth2.client.registration.google.client-secret=${GOOGLE_CLIENT_SECRET}
spring.security.oauth2.client.registration.google.scope=openid,profile,email
spring.security.oauth2.client.provider.google.token-uri=https://oauth2.googleapis.com/token
spring.security.oauth2.client.provider.google.authorization-uri=https://accounts.google.com/o/oauth2/auth
spring.security.oauth2.client.provider.google.user-info-uri=https://www.googleapis.com/oauth2/v3/userinfo
spring.security.oauth2.client.registration.google.redirect-uri={baseUrl}/login/oauth2/code/google


springdoc.show-actuator=true
management.endpoints.web.exposure.include=health,info,metrics,prometheus
management.prometheus.metrics.export.enabled=true