services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "3333:3232"
      - "9010:9010"
    depends_on:
      - postgresql
      - mongodb
      - redis
    environment:
      # --postgresql Configuration ---
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgresql:5432/project_tracker # Use service name 'postgresql'
      SPRING_DATASOURCE_USERNAME: ${postgres_user}
      SPRING_DATASOURCE_PASSWORD: ${postgres_password}

      # -- MongoDB Configuration ---
      SPRING_DATA_MONGODB_URI: mongodb://mongodb:27017/project_tracker_log

        # -- Redis Configuration ---
      SPRING_DATA_REDIS_HOST: redis
      SPRING_DATA_REDIS_PORT: 6379

      # -- Email Configuration ---
      SPRING_MAIL_HOST: smtp.gmail.com
      SPRING_MAIL_PORT: 465
      SPRING_MAIL_USERNAME: ${gmail_account}
      SPRING_MAIL_PASSWORD: ${gmail_password}
      SPRING_MAIL_PROPERTIES_MAIL_SMTP_AUTH: true
      SPRING_MAIL_PROPERTIES_MAIL_SMTP_SOCKETFACTORY_PORT: 465
      SPRING_MAIL_PROPERTIES_MAIL_SMTP_SOCKETFACTORY_CLASS: javax.net.ssl.SSLSocketFactory
      SPRING_MAIL_PROPERTIES_MAIL_SMTP_SOCKETFACTORY_FALLBACK: false
      SPRING_MAIL_PROPERTIES_MAIL_SMTP_SSL_ENABLE: true

      # -- JWT Configuration ---
      secretJwtString: ${secretJwtString}

      # --- GITHUB OAuth2/OpenID Connect Configuration ---
      SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_GITHUB_CLIENT_ID: ${GITHUB_CLIENT_ID} # Reads from .env
      SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_GITHUB_CLIENT_SECRET: ${GITHUB_CLIENT_SECRET} # Reads from .env
      SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_GITHUB_SCOPE: user:email,read:user
      # Note: {baseUrl} is dynamically replaced by Spring Security
      SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_GITHUB_REDIRECT_URI: "{baseUrl}/login/oauth2/code/github"

      # --- GOOGLE OAuth2/OpenID Connect Configuration ---
      SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_GOOGLE_CLIENT_ID: ${GOOGLE_CLIENT_ID} # Reads from .env
      SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_GOOGLE_CLIENT_SECRET: ${GOOGLE_CLIENT_SECRET} # Reads from .env
      SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_GOOGLE_SCOPE: openid,profile,email
      SPRING_SECURITY_OAUTH2_CLIENT_PROVIDER_GOOGLE_TOKEN_URI: https://oauth2.googleapis.com/token
      SPRING_SECURITY_OAUTH2_CLIENT_PROVIDER_GOOGLE_AUTHORIZATION_URI: https://accounts.google.com/o/oauth2/auth
      SPRING_SECURITY_OAUTH2_CLIENT_PROVIDER_GOOGLE_USER_INFO_URI: https://www.googleapis.com/oauth2/v3/userinfo
      SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_GOOGLE_REDIRECT_URI: "{baseUrl}/login/oauth2/code/google"


      # -- visualVM Configuration ---
      JAVA_TOOL_OPTIONS: > 
        -Dcom.sun.management.jmxremote
        -Dcom.sun.management.jmxremote.authenticate=false
        -Dcom.sun.management.jmxremote.ssl=false
        -Dcom.sun.management.jmxremote.port=9010
        -Dcom.sun.management.jmxremote.rmi.port=9010
        -Djava.rmi.server.hostname=host.docker.internal



  postgresql:
    image: postgres:15-alpine
    ports:
      - "5433:5432"
    environment:
      POSTGRES_DB: project_tracker
      POSTGRES_USER: ${postgres_user}
      POSTGRES_PASSWORD: ${postgres_password}
    volumes:
      - postgresql_data:/var/lib/postgresql/data

  mongodb:
    image: mongo:6.0
    ports:
      - "27018:27017"
    volumes:
      - mongodb_data:/data/db

  redis:
    image: redis:7.0-alpine
    ports:
      - "6380:6379"

volumes:
  postgresql_data:
  mongodb_data: